@model HomeModel
@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap">
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        .black-box {
            background-color: black;
            color: white;
            padding: 20px;
            font-family: 'Press Start 2P';
            z-index: 1;
            display: flex;
            flex-direction: row; /* Align items in a row */
        }

            .black-box button, .black-box select {
                background-color: black;
                color: white;
                padding: 10px 20px;
                border: none;
                cursor: pointer;
                margin-right: 10px;
                z-index: 1;
            }

            .black-box select {
                appearance: none;
                background-color: black;
                color: white;
                border-radius: 0;
                padding: 8px;
                cursor: pointer;
            }

        canvas {
            position: absolute;
            top: 0;
            left: 0;
            z-index: 0;
        }

    </style>
</head>
<body>
    <div class="black-box">
        &lt;Directory&gt;
        <button>Show Git</button>
        <button>Show About Me</button>
        <select id="coolThingsDropdown">
            <option value="">Show Cool Things</option>
            <option value="/rpg/">RPG</option>
            <option value="/AnotherPage/">Option 2</option>
            <!-- Add more options as needed -->
        </select>
    </div>

    <div id="root"></div>

    <script type="text/javascript">
        document.getElementById('coolThingsDropdown').addEventListener('change', function () {
            var selectedValue = this.value;
            if (selectedValue) {
                window.location.href = selectedValue;
            }
        });
    </script>

    <script type="module" crossorigin>
        // Your JavaScript logic for spawning a canvas with id "bg" goes here
        const canvas = document.createElement('canvas');
        canvas.id = 'bg';
        document.getElementById('root').appendChild(canvas);
    </script>

    <script type="module" crossorigin src="/js/animation/assets/index-0-ngzi7s.js"></script>
    <link rel="stylesheet" crossorigin href="/js/animation/assets/index-g-bggSZF.css">
</body>
</html>

@* <!doctype html>
<html lang="en">
<head>

</head>
<body>
</body>
</html> *@



@* <div>
    <h2>Welcome to my very epic website.</h2>
    <h2> my name is eduardo dominguez</h2>
    <h2> I am trying to be fullstack and eventually get into the game dev industry</h2>
    <h2> professional dev for 1 year, programming since i was 14</h2>
    <h2 style="text-align:right"> here is a picture of me</h2>

</div>
    <style>
        /* Apply styles to arrange the elements horizontally */
        .container {
            display: flex;
            align-items: flex-start; /* Align items to the top of the container */
    }

        /* Optional: Add more styling as needed */
        table {
            border-collapse: collapse;
            width: 50%; /* Adjust the width as needed */
            margin-right: 20px; /* Adjust the margin as needed */
        }

        img {
            max-width: 100%; /* Make sure the image doesn't exceed its container */
            height: auto; /* Maintain the aspect ratio of the image */
            margin-left: auto; /* Set margin-left to auto to push the image to the right */
            display: block; /* Remove any default inline styling that may affect positioning */
    }

    }
    </style> *@
@* <head>
    <h2>here is a list of repos</h2>

    <div class="container">
        @if (Model.RepoList != null)
        {
            <table bgcolor="#000000" border="1" cellpadding="10" >
                <tr>
                    <th> <a style="color :tomato">repo link</a></th>
                    <th><a style="color :tomato">descirption</a> </th>
                </tr>
            @foreach(var repo in Model.RepoList.AsArray())
            {

                    <tr>
                        <td>
                            <a style="color:tomato" href=@repo["html_url"].AsValue()>@repo["name"].ToString()</a>
                        </td>
                        <td>

                            <a style="color:tomato">
                                @((string)(repo["description"]))
                            </a>
                        </td>
                    </tr>
            }
            </table>

        }
        <img src="~/me.jpg" width="400"
             height="500" style="object-fit:contain; align-items:right;" />

    </div>
</head> *@
@* <hr />
<h1 style="text-align: center;">directory</h1>
<footer>
    <a href="Pokemon">pokemonas</a>
</footer>
 *@